name: CI

on:
  push:
    branches:
      - development
      - linux
      - 'linux-release-*'
    tags:
      - 'release-*.*.*-linux*'
  pull_request:
    branches:
      - linux
      - 'linux-release-*'

jobs:
  build:
    name: ${{ matrix.friendlyName }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: [14.x]
        os: [macos-10.15, windows-2019, ubuntu-20.04]
        include:
          - os: macos-10.15
            friendlyName: macOS
          - os: windows-2019
            friendlyName: Windows
          - os: ubuntu-20.04
            friendlyName: Ubuntu
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install and build dependencies
        run: yarn
      - name: Validate changelog
        run: yarn validate-changelog
      - name: Ensure a clean working directory
        run: yarn check-modified
      - name: Build production app
        run: yarn build:prod
      - name: Prepare testing environment
        run: yarn test:setup
      - name: Run unit tests
        run: yarn test:unit:cov
      - name: Run script tests
        run: yarn test:script:cov
      - name: Run integration tests
        timeout-minutes: 5
        run: yarn test:integration
